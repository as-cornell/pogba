/////////////////////
// General Mixins (put specific ones in component files where applicable)

@mixin baseFont($size: var(--base-font-size), $color: var(--black), $weight: var(--regular), $line-height: $base-line-height, $family: $font-sans){
    font-family: $family;
    font-size: $size;
    color: $color;
    font-weight: $weight;
    line-height: $line-height;
  }
@mixin fontSize($plier){
    font-size: $plier * $quark;
}
  
// Mixin - Standard Margin
@mixin margin {
  margin-bottom: 1em;
}

// component margin for main components. 
@mixin componentMargin($margin: 4rem){
  margin-bottom: $margin;
}

@mixin no-bottom {
  margin-bottom: 0;
}

// Mixin - Base Flex
@mixin baseFlex($flex-jc: 'flex-start') {
  display: flex;
  flex-wrap: wrap;
  justify-content: $flex-jc;
}

// Mixin - Base Grid
@mixin baseGrid($g-gap: var(--space), $g-row-gap: var(--space)){
  display: grid;
  grid-gap: $g-gap;
}
@mixin base12GridColumns(){
  grid-template-columns: repeat(12,calc(8.59% - 2rem));
}



// -------- plan on removing all of the stuff below this line ------

/// Mixin - Clearfix.
/// Adds clearfix based on http://bourbon.io/docs/#clearfix
/// use example =   @include cleafix

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

/// Mixin - Wrapper
/// Outer container mixin for large screens
@mixin wrapper($container-max-width: $max-width, $outer-container-break: $small, $v-margin: 0, $v-padding: 0, $h-padding: $space, $h-padding-large: $h-padding) {
  max-width: #{$container-max-width};
  width: 100%;
  margin: #{$v-margin} auto;
  padding: #{$v-padding} #{$h-padding};

  @include breakpoint($outer-container-break) {
    padding: #{$v-padding} #{$h-padding-large};
  }

  @include breakpoint($container-max-width) {
    padding-left: calc(#{$h-padding-large} + calc(-50vw + calc(#{$container-max-width} / 2)));
    padding-right: calc(#{$h-padding-large} + calc(-50vw + calc(#{$container-max-width} / 2)));
  }
}

/// Use the breakout mixin for elements that should be edge-to-edge
/// Even when a parent container uses the wrapper mixin
@mixin breakout($v-padding: $space-double) {
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
  padding-left: calc(#{$v-padding} + calc(-50vw + 50%));
  padding-right: calc(#{$v-padding} + calc(-50vw + 50%));
}



// Borders
@mixin baseBorder($bor-direction: "border", $bor-width: $border-width, $bor-color: $border-color) {
    @if $bor-direction == 'border'{
        border: $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-bottom'{
        border-bottom: $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-top'{
        border-top: $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-right'{
        border-right: $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-left'{
        border-left: $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-tb'{
        border-bottom: $bor-width solid $bor-color;
        border-top:    $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-lr'{
        border-left:  $bor-width solid $bor-color;
        border-right: $bor-width solid $bor-color;
    }
    @if $bor-direction == 'border-no-top'{
        border:     $bor-width solid $bor-color;
        border-top: none;
    }
    @if $bor-direction == 'border-no-bottom'{
        border:        $bor-width solid $bor-color;
        border-bottom: none;
    }
}

// Drop shadow
@mixin boxShadow(){
  box-shadow: 1px 1px 4px 0px rgba(0,0,0,0.08);
}


// Margins
@mixin baseMargin($margin-direction: "margin", $margin-width: $margin-width) {
    @if $margin-direction == 'margin'{
        margin: $margin-width;
    }
    @if $margin-direction == 'margin-bottom'{
        margin: 0 0 $margin-width;
    }
    @if $margin-direction == 'margin-right'{
        margin-right: $margin-width;
    }
    @if $margin-direction == 'margin-left'{
        margin-left: $margin-width;
    }
    @if $margin-direction == 'margin-tb'{
        margin: $margin-width 0;
    }
    @if $margin-direction == 'margin-rl'{
        margin:  0 $margin-width;
    }
}

//buttons
@mixin button($btn-color:var(--black), $bor-color: var(--black)){
  @include baseBorder($bor-width: 2px, $bor-color: $bor-color);
  padding: .5em 1em;
  color: $btn-color;
  border-radius: var(--border-radius);
  background: none;
}

// component padding
@mixin baseComponentPadding($b-top: $space, $b-right: $space, $b-bottom: $space, $b-left: $space){
  padding: $b-top $b-right $b-bottom $b-left ;
}

// component margin
@mixin baseComponentMargin($m-top: $space, $m-right: $space, $m-bottom: $space, $m-left: $space){
  margin: $m-top $m-right $m-bottom $m-left ;
}